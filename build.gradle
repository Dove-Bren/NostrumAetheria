buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the nessasary things for Forge to be setup.

version = "1.12.2-1.1.3"
group= "com.smanzana.nostrumaetheria" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "nostrumaetheria"

sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"
	useDepAts = true
	mappings = "snapshot_20171003"
}

repositories {
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
    }
    maven {
    	name = "CurseForge"
        url = "http://minecraft.curseforge.com/api/maven/"
    }
    maven {
        name = "thiakil"
        url = "http://maven.thiakil.com"
    }

    maven { // TOP
        name 'tterrag maven'
        url "https://maven.tterrag.com/"
    }
}

dependencies {

   //implementation fileTree(dir: "${project.rootDir}/libs", include: '*.jar')
	
    //deobfCompile "mezz.jei:jei_${mc_version}:${jei_version}:api"
    //runtime "mezz.jei:jei_${mc_version}:${jei_version}"
	
	//compile "com.enderio:EnderIO:1.12.2-5.3.70"
	//deobfCompile "com.enderio.core:EnderCore:1.12.2-0.5.76"
    //deobfCompile("com.enderio:EnderIO:1.12.2-5.3.68") {
    //    exclude group: 'com.enderio', module: 'ap'
    //    exclude group: "deobf.com.enderio.core"
    //}

    compile "baubles:baubles:1.12:1.5.2"

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
    // replace version and mcversion
    expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

runClient {
	args '--username', 'testplayer'
}

runServer {
	args '--nogui'
}
